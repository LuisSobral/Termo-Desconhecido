package gui;


import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.IOException;
import java.net.URISyntaxException;
import java.time.Instant;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import dao.TermoDatabase;
import jogo.BancoDeEquacoes;
import jogo.Equacao;
import jogo.ItemRodada;
import jogo.Jogo;
import jogo.Rodada;
import jogo.performances.Performance;
import jogo.performances.PerformanceGeral;

/**
 *
 * Created by LuisFelipe.
 */
public class TermoFrame extends javax.swing.JFrame {

    private TermoDatabase database;
    private Jogo jogo;
    private JTextField xValores = new JTextField();
    private int indice = 0;
    private JLabel Equacao = new JLabel();
    private JLabel EquacaoN = new JLabel();
    private JLabel xValor = new JLabel("x = ");
    private JLabel Pontuacao = new JLabel();
    private JLabel Tempo = new JLabel();
    private JLabel Tempo1 = new JLabel();
    private static final int NEQUACOES = 8;


    /**
     * Creates new form TermoFrame
     */
    public TermoFrame() throws IOException, URISyntaxException {
        this.setContentPane(new Fundo());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PrincipalPanel = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        Botão1 = new javax.swing.JButton();
        Botão2 = new javax.swing.JButton();
        EstatisticaPanel = new javax.swing.JPanel();
        Finalizar1 = new javax.swing.JButton();
        NivelPanel = new javax.swing.JPanel();
        TituloNivel = new javax.swing.JLabel();
        Nivel1 = new javax.swing.JRadioButton();
        Nivel2 = new javax.swing.JRadioButton();
        Nivel3 = new javax.swing.JRadioButton();
        SairButton = new javax.swing.JButton();
        ResultadoPanel = new javax.swing.JPanel();
        Sair = new javax.swing.JButton();
        RodadaPanel = new javax.swing.JPanel();
        Finalizar = new javax.swing.JButton();
        MostrarResultados = new javax.swing.JButton();
        AdicionarRespostas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setSize(new java.awt.Dimension(1000, 1000));
        getContentPane().setLayout(new java.awt.CardLayout());

        PrincipalPanel.setOpaque(false);
        PrincipalPanel.setPreferredSize(new java.awt.Dimension(597, 349));

        Titulo.setFont(new java.awt.Font("augie", 1, 26)); // NOI18N
        Titulo.setForeground(new java.awt.Color(255, 255, 255));
        Titulo.setText("Termo Desconhecido");

        Botão1.setBackground(new java.awt.Color(255, 0, 51));
        Botão1.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        Botão1.setForeground(new java.awt.Color(255, 255, 255));
        Botão1.setActionCommand("Começar");
        Botão1.setLabel("Começar");
        Botão1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botão1ActionPerformed(evt);
            }
        });

        Botão2.setBackground(new java.awt.Color(255, 0, 51));
        Botão2.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        Botão2.setForeground(new java.awt.Color(255, 255, 255));
        Botão2.setLabel("Histórico");
        Botão2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botão2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PrincipalPanelLayout = new javax.swing.GroupLayout(PrincipalPanel);
        PrincipalPanel.setLayout(PrincipalPanelLayout);
        PrincipalPanelLayout.setHorizontalGroup(
                PrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PrincipalPanelLayout.createSequentialGroup()
                                .addGroup(PrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(PrincipalPanelLayout.createSequentialGroup()
                                                .addGap(151, 151, 151)
                                                .addComponent(Botão1)
                                                .addGap(49, 49, 49)
                                                .addComponent(Botão2))
                                        .addGroup(PrincipalPanelLayout.createSequentialGroup()
                                                .addGap(132, 132, 132)
                                                .addComponent(Titulo)))
                                .addContainerGap(178, Short.MAX_VALUE))
        );
        PrincipalPanelLayout.setVerticalGroup(
                PrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(PrincipalPanelLayout.createSequentialGroup()
                                .addContainerGap(144, Short.MAX_VALUE)
                                .addComponent(Titulo)
                                .addGap(84, 84, 84)
                                .addGroup(PrincipalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Botão2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Botão1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46))
        );

        getContentPane().add(PrincipalPanel, "card2");

        EstatisticaPanel.setOpaque(false);
        EstatisticaPanel.setPreferredSize(new java.awt.Dimension(597, 349));

        Finalizar1.setBackground(new java.awt.Color(255, 0, 51));
        Finalizar1.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        Finalizar1.setForeground(new java.awt.Color(255, 255, 255));
        Finalizar1.setText("Menu");
        Finalizar1.setToolTipText("");
        Finalizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Finalizar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EstatisticaPanelLayout = new javax.swing.GroupLayout(EstatisticaPanel);
        EstatisticaPanel.setLayout(EstatisticaPanelLayout);
        EstatisticaPanelLayout.setHorizontalGroup(
                EstatisticaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EstatisticaPanelLayout.createSequentialGroup()
                                .addContainerGap(343, Short.MAX_VALUE)
                                .addComponent(Finalizar1)
                                .addGap(181, 181, 181))
        );
        EstatisticaPanelLayout.setVerticalGroup(
                EstatisticaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EstatisticaPanelLayout.createSequentialGroup()
                                .addContainerGap(277, Short.MAX_VALUE)
                                .addComponent(Finalizar1)
                                .addGap(47, 47, 47))
        );

        getContentPane().add(EstatisticaPanel, "card5");

        NivelPanel.setOpaque(false);
        NivelPanel.setPreferredSize(new java.awt.Dimension(597, 349));

        TituloNivel.setFont(new java.awt.Font("augie", 1, 24)); // NOI18N
        TituloNivel.setForeground(new java.awt.Color(255, 255, 255));
        TituloNivel.setText("Escolher o nivel");

        Nivel1.setFont(new java.awt.Font("augie", 1, 18)); // NOI18N
        Nivel1.setForeground(new java.awt.Color(255, 255, 255));
        Nivel1.setText("Nivel 1");
        Nivel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nivel1ActionPerformed(evt);
            }
        });

        Nivel2.setFont(new java.awt.Font("augie", 1, 18)); // NOI18N
        Nivel2.setForeground(new java.awt.Color(255, 255, 255));
        Nivel2.setText("Nivel 2");
        Nivel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nivel2ActionPerformed(evt);
            }
        });

        Nivel3.setFont(new java.awt.Font("augie", 1, 18)); // NOI18N
        Nivel3.setForeground(new java.awt.Color(255, 255, 255));
        Nivel3.setText("Nivel 3");
        Nivel3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nivel3ActionPerformed(evt);
            }
        });

        SairButton.setBackground(new java.awt.Color(255, 0, 51));
        SairButton.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        SairButton.setForeground(new java.awt.Color(255, 255, 255));
        SairButton.setLabel("Menu");
        SairButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NivelPanelLayout = new javax.swing.GroupLayout(NivelPanel);
        NivelPanel.setLayout(NivelPanelLayout);
        NivelPanelLayout.setHorizontalGroup(
                NivelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(NivelPanelLayout.createSequentialGroup()
                                .addGroup(NivelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(NivelPanelLayout.createSequentialGroup()
                                                .addGap(170, 170, 170)
                                                .addComponent(TituloNivel))
                                        .addGroup(NivelPanelLayout.createSequentialGroup()
                                                .addGap(229, 229, 229)
                                                .addGroup(NivelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(Nivel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(Nivel1)
                                                        .addComponent(Nivel2))))
                                .addContainerGap(224, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NivelPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(SairButton)
                                .addGap(181, 181, 181))
        );
        NivelPanelLayout.setVerticalGroup(
                NivelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(NivelPanelLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(TituloNivel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Nivel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Nivel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Nivel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(SairButton)
                                .addGap(47, 47, 47))
        );

        getContentPane().add(NivelPanel, "card3");

        ResultadoPanel.setOpaque(false);

        Sair.setBackground(new java.awt.Color(255, 0, 51));
        Sair.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        Sair.setForeground(new java.awt.Color(255, 255, 255));
        Sair.setLabel("Menu");
        Sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ResultadoPanelLayout = new javax.swing.GroupLayout(ResultadoPanel);
        ResultadoPanel.setLayout(ResultadoPanelLayout);
        ResultadoPanelLayout.setHorizontalGroup(
                ResultadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResultadoPanelLayout.createSequentialGroup()
                                .addContainerGap(343, Short.MAX_VALUE)
                                .addComponent(Sair)
                                .addGap(181, 181, 181))
        );
        ResultadoPanelLayout.setVerticalGroup(
                ResultadoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResultadoPanelLayout.createSequentialGroup()
                                .addContainerGap(277, Short.MAX_VALUE)
                                .addComponent(Sair)
                                .addGap(47, 47, 47))
        );

        getContentPane().add(ResultadoPanel, "card6");

        RodadaPanel.setOpaque(false);
        RodadaPanel.setPreferredSize(new java.awt.Dimension(597, 349));

        Finalizar.setBackground(new java.awt.Color(255, 0, 51));
        Finalizar.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        Finalizar.setForeground(new java.awt.Color(255, 255, 255));
        Finalizar.setLabel("Menu");
        Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizarActionPerformed(evt);
            }
        });

        MostrarResultados.setBackground(new java.awt.Color(255, 0, 51));
        MostrarResultados.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        MostrarResultados.setForeground(new java.awt.Color(255, 255, 255));
        MostrarResultados.setToolTipText("");
        MostrarResultados.setEnabled(false);
        MostrarResultados.setLabel("Resultado");
        MostrarResultados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarResultadosActionPerformed(evt);
            }
        });

        AdicionarRespostas.setBackground(new java.awt.Color(255, 0, 51));
        AdicionarRespostas.setFont(new java.awt.Font("Hobo Std", 0, 16)); // NOI18N
        AdicionarRespostas.setForeground(new java.awt.Color(255, 255, 255));
        AdicionarRespostas.setText("Responder");
        AdicionarRespostas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarRespostasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RodadaPanelLayout = new javax.swing.GroupLayout(RodadaPanel);
        RodadaPanel.setLayout(RodadaPanelLayout);
        RodadaPanelLayout.setHorizontalGroup(
                RodadaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(RodadaPanelLayout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(AdicionarRespostas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MostrarResultados)
                                .addGap(18, 18, 18)
                                .addComponent(Finalizar)
                                .addContainerGap(181, Short.MAX_VALUE))
        );
        RodadaPanelLayout.setVerticalGroup(
                RodadaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(RodadaPanelLayout.createSequentialGroup()
                                .addGap(282, 282, 282)
                                .addGroup(RodadaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(Finalizar)
                                        .addComponent(MostrarResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(AdicionarRespostas))
                                .addGap(47, 47, 47))
        );

        AdicionarRespostas.getAccessibleContext().setAccessibleParent(RodadaPanel);

        getContentPane().add(RodadaPanel, "card4");

        setSize(new java.awt.Dimension(613, 388));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Botão1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botão1ActionPerformed
        PrincipalPanel.setVisible(false);
        limparLabels();
        NivelPanel.setVisible(true);
        AdicionarRespostas.setVisible(true);
        MostrarResultados.setVisible(true);
        MostrarResultados.setEnabled(false);
    }//GEN-LAST:event_Botão1ActionPerformed

    private void Nivel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nivel1ActionPerformed
        NivelPanel.setVisible(false);
        try {
            executarRodada(1);
        } catch (IOException ex) {
            Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Nivel1ActionPerformed

    private void Botão2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botão2ActionPerformed
        PrincipalPanel.setVisible(false);
        EstatisticaPanel.setVisible(true);

        try {
            visualizarEstatisticas();
        } catch (IOException ex) {
            Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Botão2ActionPerformed

    private void Nivel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nivel2ActionPerformed
        NivelPanel.setVisible(false);
        try {
            executarRodada(2);
        } catch (IOException ex) {
            Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Nivel2ActionPerformed

    private void Nivel3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nivel3ActionPerformed
        NivelPanel.setVisible(false);
        try {
            executarRodada(3);
        } catch (IOException ex) {
            Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Nivel3ActionPerformed

    private void FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizarActionPerformed

        RodadaPanel.setVisible(false);
        PrincipalPanel.setVisible(true);
    }//GEN-LAST:event_FinalizarActionPerformed

    private void MostrarResultadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarResultadosActionPerformed
        int i = jogo.getRodadasExecutadas().size();
        Rodada rodada = jogo.getRodadasExecutadas().get(i-1);
        rodada.setTempoTotal(rodada.getTempo());
        RodadaPanel.setVisible(false);
        ResultadoPanel.setVisible(true);
        imprimirResultadoRodada(rodada);

        try {
            database.salvarJogo(jogo);
        } catch (IOException ex) {
            Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MostrarResultadosActionPerformed

    private void AdicionarRespostasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarRespostasActionPerformed
        int i = jogo.getRodadasExecutadas().size();
        Rodada rodada = jogo.getRodadasExecutadas().get(i-1);
        if(coletarResposta(rodada))
        {
            if(indice<NEQUACOES-1){
                indice++;
                executarRodada(rodada);
            }
        }
    }//GEN-LAST:event_AdicionarRespostasActionPerformed

    private void Finalizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Finalizar1ActionPerformed
        EstatisticaPanel.setVisible(false);
        PrincipalPanel.setVisible(true);
    }//GEN-LAST:event_Finalizar1ActionPerformed

    private void SairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairActionPerformed
        ResultadoPanel.setVisible(false);
        PrincipalPanel.setVisible(true);
    }//GEN-LAST:event_SairActionPerformed

    private void SairButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SairButtonActionPerformed
        NivelPanel.setVisible(false);
        PrincipalPanel.setVisible(true);
    }//GEN-LAST:event_SairButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TermoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TermoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TermoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TermoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TermoFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (URISyntaxException ex) {
                    Logger.getLogger(TermoFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public void executarRodada(int nivel) throws IOException {

        RodadaPanel.setVisible(true);
        database = new TermoDatabase();
        jogo = database.recuperarJogo();

        BancoDeEquacoes bd = jogo.getBd();
        Rodada rodada = new Rodada(Instant.now(),bd, nivel);
        executarRodada(rodada);
        jogo.adicionarRodada(rodada);
    }

    private void executarRodada(Rodada rodadaN) {

        AdicionarRespostas.setEnabled(true);
        ItemRodada item = rodadaN.obterItem(indice);
        apresentarEquacao(item.getEquacao());
    }

    private void apresentarEquacao(Equacao equacao) {

        StringBuilder sb = new StringBuilder();
        sb.append("Equação: ");
        sb.append(equacao.getExpressao());
        String expressao = sb.toString();
        Equacao.setText(expressao);
        Equacao.setFont(new Font("Augie",Font.BOLD,26));
        Equacao.setForeground(Color.white);

        StringBuilder sb1 = new StringBuilder();
        sb1.append(indice+1);
        sb1.append("/");
        sb1.append(NEQUACOES);
        String expressao1 = sb1.toString();
        EquacaoN.setText(expressao1);
        EquacaoN.setFont(new Font("Augie",Font.BOLD,26));
        EquacaoN.setForeground(Color.white);

        xValor.setFont(new Font("Augie",Font.BOLD,26));
        xValor.setForeground(Color.white);

        Equacao.setBounds(120, 100, 350, 30);
        EquacaoN.setBounds(380, 200, 100, 30);
        xValor.setBounds(230, 160, 100, 20);
        xValores.setText(null);
        xValores.setBounds(280, 155, 40, 30);

        RodadaPanel.add(xValores);

        RodadaPanel.add(xValor);

        RodadaPanel.add(Equacao);

        RodadaPanel.add(EquacaoN);
    }

    private boolean coletarResposta(Rodada rodadaN)
    {
        if("".equals(xValores.getText()))
        {
            JOptionPane.showMessageDialog(this, "Não foi dada nenhuma resposta!");
            return false;
        }

        if(indice==NEQUACOES-1){
            AdicionarRespostas.setEnabled(false);
            MostrarResultados.setEnabled(true);
        }

        ItemRodada item = rodadaN.obterItem(indice);
        String x;
        x = xValores.getText();
        int X = Integer.parseInt(x);
        item.setResposta(X);

        mostrarResposta(item);

        return true;

    }

    private void mostrarResposta(ItemRodada item)
    {
        if(item.isRespostaCorreta(item.getEquacao().respostaCerta()) == true)
            JOptionPane.showMessageDialog(this, "Parabéns!!! Você acertou essa!! :)");
        else{
            StringBuilder sb = new StringBuilder();
            sb.append("AAAAH!!! Que pena!! Você errou essa!! :(");
            sb.append("\nResposta Correta: ");
            sb.append(item.getEquacao().respostaCerta());
            String expressao = sb.toString();
            JOptionPane.showMessageDialog(this, expressao);
        }
    }

    private void imprimirResultadoRodada(Rodada rodada) {

        int j = jogo.getRodadasExecutadas().size();
        int pontuacao = rodada.pontuacao();
        jogo.getRodadasExecutadas().get(j-1).setPontuacao(pontuacao);

        Pontuacao.setText("Total de pontos: " + pontuacao);
        Pontuacao.setBounds(130, 100, 250, 20);
        Pontuacao.setForeground(Color.white);
        Pontuacao.setFont(new Font("Augie",Font.BOLD,18));
        StringBuilder sb = new StringBuilder();
        sb.append(rodada.getTempoTotal());
        sb.append(" segundos");
        String expressao = sb.toString();
        Tempo.setText("Tempo de realização da rodada: ");
        Tempo1.setText(expressao);
        Tempo.setFont(new Font("Augie",Font.BOLD,18));
        Tempo.setBounds(130, 140, 470, 40);
        Tempo1.setFont(new Font("Augie",Font.BOLD,18));
        Tempo1.setBounds(130, 165, 150, 40);
        Tempo.setForeground(Color.white);
        Tempo1.setForeground(Color.white);
        ResultadoPanel.add(Pontuacao);
        ResultadoPanel.add(Tempo);
        ResultadoPanel.add(Tempo1);
    }

    public void visualizarEstatisticas() throws IOException {

        for (Component component : EstatisticaPanel.getComponents())
        {
            if(component instanceof JLabel)
                EstatisticaPanel.remove(component);
        }

        database = new TermoDatabase();
        jogo = database.recuperarJogo();
        PerformanceGeral performance = jogo.getPerformanceGeral();
        exibirPerformance(performance.getPerformanceGeral());
        Map<Integer, Performance> performancePorNivel = performance.getPerformancePorNivel();
        for (Integer nivel : performancePorNivel.keySet()) {

            String titulo = "Nivel: " + nivel;
            JLabel tituloL = new JLabel(titulo);

            StringBuilder sb = new StringBuilder();
            sb.append("Total de rodadas: ");
            sb.append(performancePorNivel.get(nivel).numeroRodadas);
            String expressao = sb.toString();
            JLabel label1 = new JLabel(expressao);

            StringBuilder sb1 = new StringBuilder();
            sb1.append("Total de acerto: ");
            sb1.append(performancePorNivel.get(nivel).totalAcertos);
            expressao = sb1.toString();
            JLabel label2 = new JLabel(expressao);

            StringBuilder sb2 = new StringBuilder();
            sb2.append("Total de erros: ");
            sb2.append(performancePorNivel.get(nivel).totalErros);
            expressao = sb2.toString();
            JLabel label3 = new JLabel(expressao);


            if(nivel == 1)
            {
                tituloL.setBounds(280, 90, 150, 20);
                label1.setBounds(280, 100, 150, 20);
                label2.setBounds(280, 120, 150, 20);
                label3.setBounds(280, 140, 150, 20);
            }

            if(nivel == 2)
            {
                tituloL.setBounds(120, 170, 150, 20);
                label1.setBounds(120, 180, 150, 20);
                label2.setBounds(120, 200, 150, 20);
                label3.setBounds(120, 220, 150, 20);
            }

            if(nivel == 3)
            {
                tituloL.setBounds(280, 170, 150, 20);
                label1.setBounds(280, 180, 150, 20);
                label2.setBounds(280, 200, 150, 20);
                label3.setBounds(280, 220, 150, 20);
            }

            tituloL.setFont(new Font("Augie",Font.BOLD,13));
            tituloL.setForeground(Color.white);
            label1.setFont(new Font("Augie",Font.BOLD,13));
            label1.setForeground(Color.white);
            label2.setFont(new Font("Augie",Font.BOLD,13));
            label2.setForeground(Color.white);
            label3.setFont(new Font("Augie",Font.BOLD,13));
            label3.setForeground(Color.white);
            EstatisticaPanel.add(tituloL);
            EstatisticaPanel.add(label1);
            EstatisticaPanel.add(label2);
            EstatisticaPanel.add(label3);
        }
    }

    private void exibirPerformance(Performance performance)
    {
        JLabel titulo = new JLabel("Geral ");
        titulo.setBounds(120, 90, 50, 20);
        EstatisticaPanel.add(titulo);
        titulo.setFont(new Font("Augie",Font.BOLD,13));
        titulo.setForeground(Color.white);

        StringBuilder sb = new StringBuilder();
        sb.append("Total de rodadas: ");
        sb.append(performance.numeroRodadas);
        String expressao = sb.toString();
        JLabel label = new JLabel(expressao);
        label.setBounds(120, 100, 150, 20);
        EstatisticaPanel.add(label);
        label.setFont(new Font("Augie",Font.BOLD,13));
        label.setForeground(Color.white);

        label.setForeground(Color.white);
        sb = new StringBuilder();
        sb.append("Total de acerto: ");
        sb.append(performance.totalAcertos);
        expressao = sb.toString();
        label = new JLabel(expressao);
        label.setBounds(120, 120, 150, 20);
        EstatisticaPanel.add(label);
        label.setFont(new Font("Augie",Font.BOLD,13));
        label.setForeground(Color.white);

        sb = new StringBuilder();
        sb.append("Total de erros: ");
        sb.append(performance.totalErros);
        expressao = sb.toString();
        label = new JLabel(expressao);
        label.setBounds(120, 140, 150, 20);
        EstatisticaPanel.add(label);
        label.setFont(new Font("Augie",Font.BOLD,13));
        label.setForeground(Color.white);
    }

    private void limparLabels()
    {
        Nivel1.setSelected(false);
        Nivel2.setSelected(false);
        Nivel3.setSelected(false);

        for (Component component : RodadaPanel.getComponents())
        {
            if(component instanceof JLabel)
                RodadaPanel.remove(component);

            if(component instanceof JTextField)
                RodadaPanel.remove(component);
        }

        for (Component component : ResultadoPanel.getComponents())
        {
            if(component instanceof JLabel)
                ResultadoPanel.remove(component);
        }

        indice = 0;

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarRespostas;
    private javax.swing.JButton Botão1;
    private javax.swing.JButton Botão2;
    private javax.swing.JPanel EstatisticaPanel;
    private javax.swing.JButton Finalizar;
    private javax.swing.JButton Finalizar1;
    private javax.swing.JButton MostrarResultados;
    private javax.swing.JRadioButton Nivel1;
    private javax.swing.JRadioButton Nivel2;
    private javax.swing.JRadioButton Nivel3;
    private javax.swing.JPanel NivelPanel;
    private javax.swing.JPanel PrincipalPanel;
    private javax.swing.JPanel ResultadoPanel;
    private javax.swing.JPanel RodadaPanel;
    private javax.swing.JButton Sair;
    private javax.swing.JButton SairButton;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel TituloNivel;
    // End of variables declaration//GEN-END:variables
}
